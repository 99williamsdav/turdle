# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: dev build + deploy

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    #defaults:
      #run:
        #working-directory: ./src

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      working-directory: ./src
      run: dotnet restore
    - name: Build
      working-directory: ./src
      run: |
        dotnet build --configuration Release --no-restore
        dotnet publish Turdle -c Release -o ~/build/turdle --no-self-contained /p:UseAppHost=false
    - name: Test
      working-directory: ./src
      run: dotnet test --verbosity normal
    - name: Publish Artifact
      uses: actions/upload-artifact@v4
      with:
        name: turdle
        path: ~/build/turdle
    - name: Set version
      run: echo "VERSION=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV
    - name: Set branch
      run: echo "BRANCH=pr-${{ github.event.number }}" >> $GITHUB_ENV
    - name: Tar
      run: |
        tar -C ~/build/turdle -cvf turdle_${VERSION}.tar .
    - name: Upload
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.CONNECTION_STRING }}
        username: ${{ secrets.DEPLOY_USER }}
        password: ${{ secrets.DEPLOY_USER_PWD }}
        source: "turdle_${{ env.VERSION }}.tar"
        target: ${{ secrets.TARGET_DIR }}
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.CONNECTION_STRING }}
        username: ${{ secrets.DEPLOY_USER }}
        password: ${{ secrets.DEPLOY_USER_PWD }}
        script: |
          VERSION=${{ env.VERSION }}
          TARGET_DIR=${{ secrets.TARGET_DIR }}
          BRANCH=${{ env.BRANCH }}
          if [ "$BRANCH" != "main" ]; then
            VERSION="${VERSION}-${BRANCH}"
          fi
          RELEASE_DIR=/var/www/turdle/releases/$VERSION
          mkdir -p $RELEASE_DIR
          tar -C $RELEASE_DIR -xvf $TARGET_DIR/turdle_${{ env.VERSION }}.tar
          cp /var/www/turdle/appsettings*.json $RELEASE_DIR/
          ln -sfn $RELEASE_DIR /var/www/turdle/staging
          sudo systemctl restart kestrel-turdle-staging
